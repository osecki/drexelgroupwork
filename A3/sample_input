aa := 5;
ab := 10;
ac := [];
ad := [4,5, 6];
ae := [[4,[5]], 6, [7, 8]];

define len
proc(n)
  count := 0;
  bool := 1;
  ltemp := n;
  while bool do if nullp(ltemp) then bool := 0 else count := count + 1;
ltemp := cdr(ltemp) fi od;
  return := count
end;
none := [];
lenone := len(none);
ntwo := [15];
lentwo := len(ntwo);
nthree := [5,10,15];
lenthree := len(nthree);
nfour := [[],[4,5],5,[[]]];
lenfour := len(nfour);

define lenr
proc(m)
  if nullp(m) then return := 0 else return := 1 + lenr(cdr(m)) fi
end;
mone := [];
lenfive := lenr(mone);
mtwo := [15];
lensix := lenr(mtwo);
mthree := [5,10,15];
lenseven := lenr(mthree);
mfour := [[],[4,5],5,[[]]];
leneight := lenr(mfour);

ba := car([4,5,6]);
bb := car(ad);
bc := car([[4,[5]],6,[7,8]]);
bd := car(ae);
be := car(car(ae));

ca := cdr([4,5,6]);
cb := cdr(ad);
cc := cdr([[4,[5]],6,[7,8]]);
cd := cdr(ae);
ce := cdr(cdr(ae));
cf := (cdr(car(cdr(cdr(ae)))));

da := cons (4, ac);
db := cons (4, []);
dc := cons (3, ad);
dd := cons (3, [4,5,6]);
de := cons ([4,[5]], [6]);
df := cons ([3], ce);
dg := cons (car(ad), ac);
dh := cons (4, (cdr(ad)));

ea := [1, 2] || [3, 4];
eb := ad || ad;
ec := ad || [1];
ed := [1] || ad;
ee := [] || [1,2,3];
ef := [1,2,3] || [];
eg := cdr (ad) || [4];
eh := [4] || (cdr(ad));

fa := nullp([]);
fb := nullp(ac);
fc := nullp(ad);
fd := nullp([1,2]);

ga := intp(aa);
gb := intp(5);
gc := intp(ac);
gd := intp([]);
ge := intp(ad);
gf := intp([4,5]);

ha := listp(ac);
hb := listp([]);
hc := listp(ad);
hd := listp([4,5]);
he := listp(aa);
hf := listp(5)
