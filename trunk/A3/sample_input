a := 5;
b := [];
c := [15];
d := [4,5, 6];
e := [[],[4,5],5,[[]]];
f := [[4,[5]], 6, [7, 8]];

define len
proc(n)
  count := 0;
  bool := 1;
  while bool do if nullp(n) then bool := 0 else count := count + 1;n:=cdr(n) fi od;
  return := count
end;
lenones := len(b);
lentwo := len(c);
lenthree := len(d);
lenfour := len(e);
lenfive := len(f);

define lenr
proc(m)
  if nullp(m) then return := 0 else return := 1 + lenr(cdr(m)) fi
end;
lensix := lenr(b);
lenseven := lenr(c);
leneight := lenr(d);
lennine := lenr(e);
lenten := lenr(f);

a := car(c);
b := car(d);
c := car(e);
d := car(f);
e := car(car(f));

a := 5;
b := [];
c := [15];
d := [4,5, 6];
e := [[],[4,5],5,[[]]];
f := [[4,[5]], 6, [7, 8]];

a := cdr(c);
b := cdr(d);
c := cdr(e);
d := cdr(f);
e := cdr(cdr(e));
f := car(cdr(cdr(f)));

a := 5;
b := [];
c := [15];
d := [4,5, 6];
e := [[],[4,5],5,[[]]];
f := [[4,[5]], 6, [7, 8]];

a := cons (a, b);
b := cons (a, c);
c := cons (3, d);
d := cons (3, [4,5,6]);
e := cons (d, e);
f := cons ([3], f);

a := 5;
b := [];
c := [15];
d := [4,5, 6];
e := [[],[4,5],5,[[]]];
f := [[4,[5]], 6, [7, 8]];

a := [1, 2] || [3, 4];
b := a || c;
c := e || [1];
d := f || (cdr(f));

a := 5;
b := [];
c := [15];
d := [4,5, 6];
e := [[],[4,5],5,[[]]];
f := [[4,[5]], 6, [7, 8]];

ia := nullp(b);
ib := nullp(c);
ic := nullp(d);
id := nullp(e);
ie := nullp(f);

ia := intp(a);
ib := intp(b);
ic := intp(c);
id := intp(d);
ie := intp(e);

ia := listp(a);
ib := listp(b);
ic := listp(c);
id := listp(d);
ie := listp(e)

